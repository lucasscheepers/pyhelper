version: 0.2
run-as: root

env:
  secrets-manager:
    ARNROLE: codebuild:arnrole
    ECRURI: codebuild:ecruripyhelper

phases:

  install:
    commands:
      - git --version
      - echo Installing app dependencies...
      - chmod +x prereqs.sh
      - sh prereqs.sh
      - source ~/.bashrc
      - echo Check kubectl version
      - kubectl version --short --client
      - echo Installing git-crypt...
      - curl https://www.agwa.name/projects/git-crypt/downloads/git-crypt-0.6.0.tar.gz --output git-crypt.tar.gz
      - tar xvzf git-crypt.tar.gz -C .
      - cd git-crypt-0.6.0
      - make
      - make install
      - cd ..
      - echo Downloading the key to decrypt the files
      - aws s3 cp s3://s3-mattermost-iv/pyhelper-key.kbx pyhelper-key.kbx
      - echo Decrypting the files
      - git clone https://github.com/lucasscheepers/pyhelper.git
      - cd pyhelper
      - git-crypt unlock ../pyhelper-key.kbx
      - cp deployment.yml ../deployment.yml
      - cd ..

  pre_build:
    commands:
      - echo Logging in to Amazon EKS...
      - aws eks --region eu-west-2 update-kubeconfig --name prod-cluster
      - aws eks update-kubeconfig --name prod-cluster --region eu-west-2 --role-arn $ARNROLE
      - echo Check config
      - kubectl config view
      - echo Check kubectl access
      - kubectl get svc
      - echo 'Logging in to Amazon ECR...'
      - $(aws ecr get-login --region eu-west-2 --no-include-email)
      # - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      # - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      # - docker pull $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing variables to .env file
      - cat >> .env << EOF
        MATTERMOST_URL=test
        MATTERMOST_PORT=test
        BOT_TOKEN=test
        BOT_TEAM=test test
        BOT_CHNNL_ID=test

        RABBIT_HOST=1test
        RABBIT_PORT=test
        RABBIT_USR=test
        RABBIT_PWD=etes
        EOF
      - cat .env

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker image build --no-cache --pull -t $ECRURI:latest .
      - docker tag $ECRURI:latest $ECRURI:$CODEBUILD_BUILD_NUMBER

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images
      - docker push $ECRURI:latest
      - docker push $ECRURI:$CODEBUILD_BUILD_NUMBER
      - echo Push the latest image to cluster
      # - kubectl delete -n ind-iv -f deployment.yml
      - kubectl apply -n ind-iv -f deployment.yml
